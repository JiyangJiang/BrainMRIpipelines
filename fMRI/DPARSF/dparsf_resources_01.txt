总结：新版dparsfA的文件夹内容&旧版dparsf的总结
Ref : http://blog.sina.com.cn/s/blog_4d25466d0101lsrh.html


这是用静息的示例数据的流程：
slice timing(33,隔层)----realign----reorient Fun & reorient T1----T1 Coreg to Fun-----Segment /Affine Regularisation in segmentation /European----Normalize/Bounding Box[-90 -126 -72;90 90 108]/Voxel size[3 3 3]
-----Smooth/FWHM[4 4 4]----Detrend---Alff+fALFF--- band0.01-0.08-----Filter.
(有时dparsf或dparsfA跑数据时会死机，最好用它们跑数据时，同时打开SPM，这样死机的概率会降低点)
=================================================
FunRaw
T1Raw --每个subjects的最初的dicom数据；

FunImg----{FunImg功能像（T2Img）和T1Img结构像是由于采集驰豫时间不同导致：T2像(功能像)白质是灰的，灰质是白色,该img空间分辨率不高，两秒内获得32层或者更多层；T1像更加清晰其白质是白的，灰质是黑的，该img则空间分辨率非常高，5分钟才能获取一幅)}

T1Img ----每个subjects的DICOM转化为Nifti数据（.nii.gz., .nii or .img）

FunImgA -----Slice timing后数据 （含有a*数据，及处理当天日期.ps文件;注意：slice timing校正的是一个TR内的数据；slice timing的目的是保证同一个TR内的每一层都是在同一个时间点采集的，以保证采集每一层时大脑都在同一状态，slice timing的目的是保证同一个TR内的每一层都是在同一个时间点采集的，以保证采集每一层时大脑都在同一状态，同一个TR脑活动情况相同；同一个TR脑活动情况相同。不能改变数据随着采集时间长所带来的漂移。）
FunImgAR ---- Realign 数据  （含有ra*数据，及处理当天日期.ps文件）
RealignParameter---- Realign 数据 参数数据（含有每个被试meana*头动img文件，及rp_a*txt：等严老师PPT里提及的头动参数文件）
ReorientMats----Reorient AC for FunImg & T1Img(*ReorientFunImgMat.mat & *ReorientT1ImgMat.mat)（需要注意：Reorient AC ----Reorient T1*调整的是最初的T1Img;Reorient Fun*调整的是
RealignParameter里面的meana*头动img文件；之后应用于到FunImgAR文件里。）
AC的位置调整参见 http://blog.sina.com.cn/s/blog_4d25466d0101ljtw.html
再插一段好看原点的操作：
============================================================================================
{看原点坐标方法：spm fmri-display-加img-在Crosshair Position下的mm里输入0 0 0；或者双击Crosshair Position下的小横杠}
--------------------------------------------------------------------------------------------
再插播一段处理过程：
=============================================================================================
还有传统的配准，分割，与标准化的步骤在dparsf与dparsfA中有区别的：
源自：http://www.restfmri.net/forum/node/1526
Normalization这一步骤中，旧版的dparsf 如果将"采集到每个被试的T1像时，用T1像的联合分割方法，把功能像配到相应的T1像中",只需要填好这些参数normalize;bounding box; Voxel size; Normalize by T1 image unified segmantation.; east asian 或eurpean，即可完成。
如用新版的完成上述步骤，则需“a.T1 Coreg to Fun”“b.Segment，Affine Regularisation in Segmentation East Asian”“c.Normalize， Bounding box ， Voxel size， Normalize by using T1 image unified segmentation” 分别设置。
为啥要进行上述这三步骤？因为我们人的个体脑袋千差万别，只有将不同大脑配准至统一的大脑空间坐标体系下（统一的MNI坐标体系），这样才能进行后续的统计分析。
“a.T1 Coreg to Fun”是指将结构像配准至功能像上。这是由于结构像和功能像是不同模态的，那需要将结构像（source img）的参数信息写入至功能像（reference img）,即将不同模态的data配准至一起来。

“b.Segment，Affine Regularisation in Segmentation East Asian”
Affine Regularisation in Segmentation East Asian在分割之前，对图像进行变换，以此达到更好的分割效果。
Segment对配准后的结构像进行分割，分割出白质、灰质和脑脊液；并给出两个矩阵信息{（“*_seg_inv_sn.mat”将MNI空间信息写入至原始空间）和（“*_seg_sn.mat”将原始空间信息写入至MNI空间，该信息用于后续的标准化）}

“c.Normalize， Bounding box ， Voxel size， Normalize by using T1 image unified segmentation” 
将分割结构像里评估的参数信息“*_seg_sn.mat”写入至功能像内；并配准后将脑袋装入一个统一的盒子里，该盒子大小就是（Bounding box）；voxel size配准后图像生成多大（即为voxel size,即最小的体积；pixel最小的提素）？
完成后，需要逐一查看配准的图像是否合格，如果不合格，则需要去逐一查看。

=============================================================================================
完成上述的处理后，生成文件夹：
T1ImgCoreg -----（T1Img像进行了coreg后的文件）
T1ImgSegment----- （分割出：c1*/c2*/c3*/wc1*/wc2*/wc3*/m*/mwc1*/mwc2*/mwc3*/T1Img像进行了coreg后的文件/T1Img像进行了coreg后的文件基础上m文件/*_seg_inv_sn.mat/*_seg_sn.mat）[注意：c1-grey matter;c2-white matter;c3-CSF:原始T1像如何，其c打头的文件样子就如何。mw打头的文件，则是与模板配准后的文件。具体参见spm8手册41-42页]
FunImgARW ----- （wra*数据的数据，它是所有的FunImg与*_seg_sn.mat配准后的文件。注意之前做了reorient，将相关参数放置到原始FunImg）[注意这时生成的文件：Normalize/Bounding Box[-90 -126 -72;90 90 108]/Voxel size[3 3 3]---Dimensions:61*73*61;origin:31.0 43.0 25.0]
同时，生成：PicturesForChkNormalization 文件，看normalization后的文件是否合格。
Smooth后，FunImgARWS ----- （swra*数据的数据，smooth提高信噪比。)
FunImgARWSD----- (detrend_4DVolume.nii)
Masks-----（AllResampled_BrainMask_05_91x109x91.nii;AllResampled_CsfMask_07_91x109x91.nii;AllResampled_GreyMask_02_91x109x91.nii;AllResampled_WhiteMask_09_91x109x91.nii，这些是对原来的DPARSFA里的BrainMask_05_91x109x91.nii等mask进行重采样，进而变成本被试normalize后的标准：61*73*61，之后用这个重采样的mask来进行后面的Alff+fAlff分析。与标准化的标准一致：dimensions61*73*61,vox size:-3*3*2,origin31 43 25;我的理解是：视频里提及的卡阈值后的。这个地方做的原理理解不定准确，需要进一步核对)
Results----- (ALFF文件夹与fALFF文件夹里分别有：ALFFMap*,mALFFMap*,zALFFMap*,文件与fALFFMap*,mfALFFMap*,zfALFFMap*文件)
FunImgARWSDF-----(Filtered_4DVolume.nii)

=======================如下是DPARSFA跑完一个sub后的中smooth后的command window出来的内容。
-----------------------------------------------------------------------
Running job #1
-----------------------------------------------------------------------
Running 'Smooth'
Done    'Smooth'
Done

Smooth:Sub_003 OKMoving Smoothed Files:Sub_003 OK

Removing the linear trend: /tryingsub03/FunImgARWS/Sub_003

     Read 3D EPI functional images: "/tryingsub03/FunImgARWS/Sub_003"...............................................

     Detrend working.    Wait.............

     Saving detrended images.    Wait...
     Detrend over.
    Elapsed time is 37.908453 seconds.
Moving Dtrended Files:Sub_003 OK

Resample Masks (soft/DPARSF_V2.3_130615/Templates/BrainMask_05_91x109x91.img) to the resolution of functional images.

Resample Masks (soft/DPARSF_V2.3_130615/Templates/CsfMask_07_91x109x91.img) to the resolution of functional images.

Resample Masks (soft/DPARSF_V2.3_130615/Templates/WhiteMask_09_91x109x91.img) to the resolution of functional images.

Resample Masks (soft/DPARSF_V2.3_130615/Templates/GreyMask_02_91x109x91.img) to the resolution of functional images.

Computing ALFF...
     Read 3D EPI functional images: "/tryingsub03/FunImgARWSD/Sub_003".

     Load mask "/tryingsub03/Masks/AllResampled_BrainMask_05_91x109x91.nii".
     Performing FFT .............
     ALFF and fALFF compution over, elapsed time: 11.78 seconds.

Ideal rectangular filter:    "/tryingsub03/FunImgARWSD/Sub_003"
     Read 3D EPI functional images: "/tryingsub03/FunImgARWSD/Sub_003".

     Band Pass Filter working.    Wait.............
     Saving filtered images.    Wait...
     Band pass filter over.
    Elapsed time is 20.059543 seconds.
Moving Filtered Files:Sub_003 OK



*************************************************************************
*************************************************************************
经验总结：
1.当时，做完slice timing & realign后，我关闭DPARSFA。之后再重开DPARSFA，进行reorientT1&reorient FunImg,我当时忘记把Starting Directory Name设定为FunImgAR；而是继续使用FunImg。这样做导致直接跳过FunImgAR数据，直接从FunImg进行分析：即mean的头动文件reorient后调整至FunImg里了，之后在FunImg基础上normalization等分析了，但normalizaiton的img看似还是合格的，但mask也做错了，即dimensions:64*64*33;vox size:-3.13*3.13*3.6;origin32.5*24.5*13.9）。

2.于是，我重新计算，特意将Starting Directory Name设定为FunImgAR，但忘记哪步有错了，不过后来核对时，发现mean的头动文件的origin与FunImgAR里的origin的不一致，也就是说：我忘记把：reorient的 meana*头动img文件重新定位至FunImgAR里，导致后面normalization的img图像不合格，但mask的文件却没有问题。

3.整理原始数据一定要注意:每个被试文件夹的命名不能含空格和中文或者其它原因，否则数据无法运行。出错会提示：??? Error while evaluating uicontrol Callback
??? Error using ==> EditorDocument.EditorDocument>EditorDocument.openEditor at 234
Open requires that 'DPARSFA_run.m' be an absolute path.
Error in ==> open at 29
    obj = editorservices.EditorDocument.openEditor(filename);
Error in ==> opentoline at 33
        editorObj = editorservices.open(fileName);
----我至今不确定自己数据一天没法运行，是不是就是文件夹命名的原因。反正找不到其它的错误，同一批数据在dparsfA,dparsf运行都是这样的错误提示，后来我逐一核对每个文件夹的命名，有些数据正常运行，有些数据还是不能运行！
------原因找到了：是其中的一个被试从dicom转化成hdr,img格式时，在这100多帧img中，后面有几帧img的大小与其它的不同，所以不能进行分析了。后来怎么dicom转换都是大小都是小，至今原因未明。
-----201502023一天都遇到这样问题，按照上述思路还是解决不了。后来，将扫描层数修改了一下，结果顺利跑数据。所以，一定要确定好扫描层数，扫描方式：是否是间隔扫描，还是逐层；是先奇数层还是偶数层！


4.基本电脑性能很强大。被试数据再多，一次最好不要出来30以上，建议10-15人为宜。

所以每一步都需要认真核对，马虎不得。



================================================================================================


旧版的Darsf的处理，http://restfmri.net/forum/node/671
Reho是基于without smooth的数据，之后可以选择 smReHO会对数据进行smooth，但平滑盒值是多少呢？这个我不太清楚，我猜是：4， dparsf默认的？
ALFF, fALFF是基于with smooth data
为此，Reho与ALFF, fALFF得分开处理。


===============================================================================================
20160525
新版dpabi嵌套DPARSFA
流程：提取协变量FunImgRWCovs内就相应协变量的参数值(如：提取了头动参数就有头动参数值；还有白质、脑脊液的值)；FunImgRWC则为提取了协变量。
在Nuisance Setting里有选择是否提取白质、脑脊液、----对于Both with&without里则有分别提取全脑信号，和不提取全脑信号：即提取白质、脑脊液和全脑信号；和提取白质、脑脊液信号两种都执行。  

===================================================================================
同一批的两组静息态数据尝试过：ARWCS,RWCS,ARWS,RWS四种方法。
在ALFF中，发现组差异脑区数目最少的是ARWS（1个）,RWS（1个）；脑区较多的是ARWCS（3个，包括一个不准确的脑区），其次是RWCS（2个）;
在fALFF中，发现组差异脑区数目最少的是ARWCS（1个）,RWCS（1个）；脑区较多的是ARWS（4个，包括一个不准确的脑区），其次是RWS（2个）;
在ReHo中，发现组差异脑区数目最少的是ARWCF（2个，包括一个不准确的脑区）,RWCF（3个）；脑区较多的是ARWF（7个），其次是RWS（6个，包括一个不准确的脑区）;

===================================================================================
方差
总结：新版dparsfA的文件夹内容&旧版dparsf的总结

总结：新版dparsfA的文件夹内容&旧版dparsf的总结


=============================== 
在function image图像问题不大时，可以看看个体的静息态是否激活出默认网络，最好是直接看以PCC（或其它默认网络的脑区为种子点）做全脑的功能连接（voxel-wise FC），看个体被试的以PCC为种子点，是否激活了默认网络脑区。
最好，参照这篇里面的参数http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0025031  a spherical region of interest (ROI) (radius = 10 mm) was defined, centered at a coordinate (0, −56, 30) within the PCC [42]  The preprocessed data were spatially smoothed (full width at half maximum (FWHM) = 6 mm) -smooth也选择这个（ (FWHM) = 6 mm相对于 (FWHM) = 4 mm 会有更多的默认网络脑区）。