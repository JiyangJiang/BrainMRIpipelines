
R version 3.4.4 (2018-03-15) -- "Someone to Lean On"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> ############################### ACE Model #######################
> ### Data import
> Data<-read.delim("Test Data ACE Model.csv", header = TRUE, sep = ";")
> 
> # zyg as factor
> Data$zyg<- factor(Data$zyg, levels= c(1:2),labels= c("MZ", "DZ"))
> 
> 
> ### loading packages
> require(OpenMx)
Loading required package: OpenMx
To take full advantage of multiple cores, use:
  mxOption(NULL, 'Number of Threads', parallel::detectCores()) #now
  Sys.setenv(OMP_NUM_THREADS=parallel::detectCores()) #before library(OpenMx)
> require(psych)
Loading required package: psych

Attaching package: ‘psych’

The following object is masked from ‘package:OpenMx’:

    tr

> 
> # Load Data 
> describe(Data, skew=F)
           vars  n  mean   sd   min   max range   se
Subjects*     1 25 13.00 7.36  1.00 25.00 24.00 1.47
zyg*          2 25  1.40 0.50  1.00  2.00  1.00 0.10
duration.1    3 25  8.57 0.38  7.89  9.34  1.45 0.08
duration.2    4 25  8.59 0.49  7.65  9.57  1.92 0.10
quality.1     5 25 90.25 4.59 79.02 98.35 19.33 0.92
quality.2     6 25 89.89 4.79 81.72 96.86 15.14 0.96
> 
> # Prepare Data
> Vars      <- 'duration'                   # choosing variable
> nv        <- 1                            # nv = number of variables
> ntv       <- nv*2                         # number of total variables (number types of twins(2) * number of variables
> selVars   <- c("duration.1", "duration.2")# selecting variables according to colume name
> selVars
[1] "duration.1" "duration.2"
> 
> 
> # Select Data for Analysis
> mzData    <- subset(Data, zyg=="MZ", selVars)
> dzData    <- subset(Data, zyg=="DZ", selVars)
> 
> # Generate Descriptive Statistics
> colMeans(mzData)
duration.1 duration.2 
  8.626067   8.581467 
> colMeans(dzData,na.rm=TRUE)
duration.1 duration.2 
    8.4741     8.6071 
> cov(mzData,use="complete")
           duration.1 duration.2
duration.1  0.1613896  0.1092721
duration.2  0.1092721  0.1989681
> cov(dzData,use="complete")
           duration.1 duration.2
duration.1 0.12570210 0.05588221
duration.2 0.05588221 0.32835499
> 
> 
> # Set Starting Values
> svMe      <- 20      # start value for means
> svPa      <- .6      # start value for path coefficients (sqrt(variance/#ofpaths))
> 
> # ACE Model
> # Matrices declared to store a, c, and e Path Coefficients
> pathA     <- mxMatrix( type="Full", nrow=nv, ncol=nv,
+                        free=TRUE, values=svPa, label="a11", name="a" ) # matrix names with 11 referring to the first row and column of the matrix
> pathC     <- mxMatrix( type="Full", nrow=nv, ncol=nv,
+                        free=TRUE, values=svPa, label="c11", name="c" )
> pathE     <- mxMatrix( type="Full", nrow=nv, ncol=nv,
+                        free=TRUE, values=svPa, label="e11", name="e" )
> 
> # Matrices generated to hold A, C, and E computed Variance Components
> covA      <- mxAlgebra( expression=a %*% t(a), name="A" )
> covC      <- mxAlgebra( expression=c %*% t(c), name="C" )
> covE      <- mxAlgebra( expression=e %*% t(e), name="E" )
> 
> # Algebra to compute total variances
> covP      <- mxAlgebra( expression=A+C+E, name="V" )
> 
> # Algebra for expected Mean and Variance/Covariance Matrices in MZ & DZ twins
> meanG     <- mxMatrix( type="Full", nrow=1, ncol=ntv,
+                        free=TRUE, values=svMe, label="mean", name="expMean" )
> 
> # Algebra for expected and Variance/Covariance Matrices in MZ & DZ twins
> covMZ     <- mxAlgebra( expression=rbind( cbind(V, A+C),
+                                           cbind(A+C, V)), name="expCovMZ" )
> covDZ     <- mxAlgebra( expression=rbind( cbind(V, 0.5%x%A+ C),
+                                           cbind(0.5%x%A+C , V)), name="expCovDZ" )
> 
> # Data objects for Multiple Groups
> dataMZ    <- mxData( observed=mzData, type="raw" )
Error: The name 'duration.1' is illegal because it contains the '.' character in mxData(observed = mzData, type = "raw")
Execution halted
