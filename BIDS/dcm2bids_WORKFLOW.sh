#!/bin/bash

# dcm2niix configuration file is at ~/.dcm2nii.ini
#
# DATA PREPARATION
# ------------------------------------------------------------------------------
# 1. all DICOM or PAR/REC files should be put in a folder inside the subjectFolder.
#    and this should be the only folder in subjectFolder.
#
# 2. subjectFolder should have the folder name same as participant's ID.
#
#
# OUTPUT
# ------------------------------------------------------------------------------
# projectFolder contains all BIDS format outputs.
#
#
# USAGE
# ------------------------------------------------------------------------------
# rawDataFolder : path to the folder containing one folder for each subject
#                 (subjectFolder). Within each subjectFolder, one (and the only)
#                 folder should be present, containing all DICOM or PAR/REC files.
#
# projectFolder : path to the final BIDS-format folder
#
# config_json : path to the configuration json file (which is manually created
#               with the output from debug mode).
#
# debug_mode : set to Y in the first run, in order to create the configure json.
#
#
# DETAILED WORKFLOW
# ------------------------------------------------------------------------------
# > Step 1 : Set debug_mode=Y. This will run dcm2bids_helper for the first
#            subject.
#
# > Step 2 : Create configuration json using the dcm2bids_helper output from
#            Step 1.
#
# > Step 3 : Set debug_mode=N to run through all subjects.
#
# =============================================================================
#
# HISTORY
#
# - Jan 2019 : Dr. Jiyang Jiang wrote the first version.
#


rawDataFolder=/Users/jiyang/Desktop/fMRI_fMRIPrep+ICA/rawData_MW4/DICOM
projectFolder=/Users/jiyang/Desktop/fMRI_fMRIPrep+ICA/rawData_MW4/DICOM_projectFolder
config_json=/Users/jiyang/Dropbox/Jiyang/CNSP/FUTURE/fMRI_processing/dcm2bids/MW4_DICOM_config.json
# whether doing dcm2bids_helper to aid
# creating configure json
debug_mode=N


# list of all raw data
ls -1d ${rawDataFolder}/* > ${rawDataFolder}/.rawDataList

# projectFolder
if [ ! -d "${projectFolder}" ]; then
	mkdir -p ${projectFolder}
fi

case ${debug_mode} in

# =================================================================================
#                                   Debug mode
# =================================================================================
Y)

	subjectFolder=`head -n 1 ${rawDataFolder}/.rawDataList`
	participantID=$(basename ${subjectFolder})

	# =============================================================================

	# Step 0 : Preparation
	# --------------------
	# remove subjectFolder/tmp_dcm2bids which is generated by previous run of dcm2bids
	if [ -d "${subjectFolder}/tmp_dcm2bids" ]; then
		rm -fr ${subjectFolder}/tmp_dcm2bids
	fi
	# remove previous sub-participantID folder in projectFolder if present
	if [ -d "${projectFolder}/sub-${participantID}" ]; then
		rm -fr ${projectFolder}/sub-${participantID}
	fi

	# =============================================================================

	# Step 1 : cd to subject folder
	# -----------------------------
	cd ${subjectFolder}


	# Step 2 : find DICOM folder
	# --------------------------
	DICOMfolder=`find ${subjectFolder} -mindepth 1 -maxdepth 1 -type d`
	echo "DICOM folder from scanner is ${DICOMfolder}"


	# ============================================================================
	# Step 3 and 4 only need to be run once (for the first subject). The resultant
	# configuration json should be able to be generalised to other subjects in the
	# cohort. Set debug_mode=Y to run Step 3 and 4.
	# ----------------------------------------------------------------------------
	#
	# Step 3 : run dcm2bids_helper
	# ----------------------------
	echo "Debug_mode = Y. Running dcm2bids_helper."
	echo "Running dcm2bids_helper ..."
	dcm2bids_helper -d ${DICOMfolder}
	echo "dcm2bids_helper output at ${subjectFolder}/tmp_dcm2bids/helper"

	# Step 4 : create configuration json on http://jsoneditoronline.org/
	#          using output from dcm2bids_helper
	# ------------------------------------------------------------------
	echo
	echo "Now need to manually create configuration json"
	echo
	# ============================================================================
;;




# =================================================================================
#                          Normal mode - run all subjects
# =================================================================================
N)
	while read rawData
	do


		subjectFolder=${rawData}
		participantID=$(basename ${rawData})

		# =============================================================================

		# Step 0 : Preparation
		# --------------------
		# remove subjectFolder/tmp_dcm2bids which is generated by previous run of dcm2bids
		if [ -d "${subjectFolder}/tmp_dcm2bids" ]; then
			rm -fr ${subjectFolder}/tmp_dcm2bids
		fi
		# remove previous sub-participantID folder in projectFolder if present
		if [ -d "${projectFolder}/sub-${participantID}" ]; then
			rm -fr ${projectFolder}/sub-${participantID}
		fi

		# =============================================================================

		# Step 1 : cd to subject folder
		# -----------------------------
		cd ${subjectFolder}


		# Step 2 : find DICOM folder
		# --------------------------
		DICOMfolder=`find ${subjectFolder} -mindepth 1 -maxdepth 1 -type d`
		echo "DICOM folder from scanner is ${DICOMfolder}"


		# Step 5 : run dcm2bids
		# ---------------------
		echo "Debug_mode = N. Not running dcm2bids_helper."
		echo "Continue with the following steps."
		dcm2bids -d ${DICOMfolder} \
				 -p ${participantID} \
				 -c ${config_json}


		# Step 6 : fix the missing "TaskName" issue
		# -----------------------------------------
		cd sub-${participantID}/func
		for i in `ls *.json`
		do
			task=$(echo $i | awk -F'task-' '{print $2}' | awk -F'_' '{print $1}')
			ex -s -c "2i|\"TaskName\": \"${task}\"," -c x ${i}
		done
		cd ${subjectFolder}


		# Step 7 : move sub-* to projectFolder
		# ----------------------------------
		mv sub-${participantID} ${projectFolder}/.


	done < ${rawDataFolder}/.rawDataList



	# Step 8 : create basic BIDS files with dcm2bids_scaffold
	#          This only needs to be done once.
	# -------------------------------------------------------
	dcm2bids_scaffold -o ${projectFolder}

	# Step 9 : in participants.tsv, manually change participants_id to participant_id
	# -------------------------------------------------------------------------------
	cp $(dirname $(which $0))/participants.tsv \
	   ${projectFolder}/.


	# Step 10 : insert creat data/time to README
	#           README will report as error if leaving empty
	# ------------------------------------------------------
	echo "Created at $(date)" > ${projectFolder}/README


	# Step 11 : validation
	# --------------------
	echo "You can now validate ${projectFolder}"
	echo "using the online validator http://bids-standard.github.io/bids-validator/"

;;
esac

