function DICOM2BIDS = bmp_DICOMtoBIDSmapper (varargin)
%
%
%  +++++++++++++++++++++++++++++++++++++++++++++++++
%  HEADER NEEDS TO BE UPDATED (TABLE-BASED MAPPINGS)
%  +++++++++++++++++++++++++++++++++++++++++++++++++
%
%
% DESCRIPTION
% =================================================================================================
%
%   bmp_DICOMtoBIDSmapper generates DICOM-to-BIDS mappings. This is done by 1) passing, as 
%   arguments, a cell array of key DICOM fieldnames and a cell array of DICOM fieldvalues 
%   associated to them, or 2) passing the name of dataset which mapping has been preset. Curretly
%   available preset mappings include ADNI.
%
%
% ARGUMENTS
% ================================================================================================
%
%   Senario 1 : Let BMP suggest DICOM-to-BIDS mappings. Two input arguments are needed in thhis
%               senario:
%
%               varargin{1} = Cell array of DICOM key field names.
%
%               varargin{2} = Cell array of unique values in DICOM key fields specified in
%                             varargin{1}.
%
%               These two cell arrays can be generated by calling bmp_DICOMenquirer.
%
%               Note that this senario still needs thorough testing.
%
%
%   Senario 2 : Use predefined DICOM-to-BIDS mappings for public datasets or CHeBA datasets. One
%               input argument is needed in this senario:
%
%               varargin{1} = dataset name. Currently supported datasets include 'ADNI'.
%
%
%   If not specifying any arguments, default is 'Senario 2' with 'ADNI'.
%
%
% OUTPUT
% ================================================================================================
%
%   DICOM2BIDS - a MATLAB structure to specify DICOM-to-BIDS mappings. It can be directly input to
%                bmp_GIDSgenerator.
%
%
%
% SUPPORTED MODALITIES IN SENARIO 1
% ================================================================================================
%
%   ----------------------------------------------
%   |   DATETYPE   |   MODALITY   |   KEYWORDS   |
%   ----------------------------------------------
%   |   anat       |   T1w        |   'MPRAGE'   |
%   |              |              |   'T1'       |
%   ----------------------------------------------
%   |   anat       |   FLAIR      |   'FLAIR'    |
%   ----------------------------------------------
%   |   dwi        |   dwi        |   'DTI'      |
%   ----------------------------------------------
%   |   perf       |   asl        |   'ASL'      |
%   ----------------------------------------------
%   
%   All keywords are case-insensitive.
%
%
%
% SUPPORTED DATASETS IN SENARIO 2
% ===============================================================================================
%
%   - Currently support ADNI T1w, FLAIR and ASL.
%
%
% THE WAY BMP CREATES AND INTERPRET DICOM-TO-BIDS MAPPINGS
% ======================================================================================
%
%   There are 3 types of mapping
%
%     - Individual-level mapping : Specify criteria for each individual. For example, 
%                                  in ADNI, session labels can only be mapped through 
%                                  looking at scan date and/or patient name.
%
%     - Dataset-level mapping : All subjects in the dataset share the same criteria 
%                               for a modality.
%
%     - Subgroup-level mapping : A sub-group in the dataset shares a set of criteria.
%
%
%   The DICOM-to-BIDS mapping is through constructing a MATLAB structure (DICOM2BIDS). 
%
%   
%   +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
%   +                          Individual-level mapping                               +
%   +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
%   +                                                                                 +
%   +   Dataset                                                                       +
%   +      |                                                                          +
%   +      |                                                                          +
%   +  DICOM2BIDS ----- subject                                                       +
%   +             \                                                                   +
%   +              \                                                                  +
%   +               session -- datatype -- modality -- run -- DICOM -- keys = values  +
%   +                                                      \                          +
%   +                                                       \                         +
%   +                                                        BIDS ---- keys = values  +
%   +                                                                                 +
%   +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
%   +                                                                                 +
%   + An example of individual-level DICOM-to-BIDS mapping:                           +
%   +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
%   +                                                                                 +
%	+   ADNI.DICOM2BIDS(1).subject = 'sub-128S0272';                                  +
%   +                                                                                 +
%	+   ADNI.DICOM2BIDS(1).m12.anat.T1w.run01.DICOM.SeriesDescription = 'SAG MPRAGE'; +
%	+   ADNI.DICOM2BIDS(1).m12.anat.FLAIR.run01.DICOM.SeriesDescription = '3D FLAIR'; +
%   +                                                                                 +
%	+   ADNI.DICOM2BIDS(1).m12.anat.T1w.run01.BIDS.acquisition = 'sagMPRAGE';         +
%	+   ADNI.DICOM2BIDS(1).m12.anat.FLAIR.run01.BIDS.acquisition = 'sag3DFLAIR';      +
%   +                                                                                 +
%   +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
%
%
%
%   +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
%   +                      Dataset/Subgroup-level mapping                             +
%   +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
%   +                                                                                 +
%   + DICOM2BIDS -- session -- datatype -- modality -- run -- DICOM -- keys = values  +
%   +                                                      \                          +
%   +                                                       \                         +
%   +                                                        BIDS ---- keys = values  +
%   +                                                                                 +
%   +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
%   +                                                                                 +
%   + An example of dataset/subgroup-level mapping:                                   +
%   +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
%   +                                                                                 +
%   +   DICOM2BIDS.ses01.anat.T1w.run01.DICOM.ProtocolName = '3D MPRAGE';             +
%   +                                                                                 +
%   +   DICOM2BIDS.ses01.anat.T1w.run01.BIDS.acquisition = '3Dmprage'                 +
%   +                                                                                 +
%   + +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
%   +                                                                                 +
%   + NOTES                                                                           +
%   +                                                                                 +
%   +   1) 'session' and 'run' entities are necessary when defining DICOM2BIDS        +
%   +      mapping, in case different sessions and/or runs have different             +
%   +      criteria. If only one session label or one run index exists in the final   +
%   +      DICOM2BIDS, bmp_BIDSgenerator will ignore them in the converted images     +
%   +      and folder structure.                                                      +
%   +                                                                                 +
%   +   2) 'subject' label is not specified in dataset-/subgroup-level mappings.      +
%   +      bmp_BIDSgenerator will regard sub-folder names in the overall DICOM        +
%   +      directory as subject label.                                                +
%   +                                                                                 +
%   +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
%
%
%   DICOM2BIDS can be derived from calling bmp_DICOMenquirer and bmp_DICOMtoBIDSmapper.
%
%
%
% HISTORY
% ================================================================================================
%
%   04 December 2022 - first version.
%
%
%
% KNOWN LIMITATIONS
% ===============================================================================================
%
% - In senario 1, only prioritised keyword in prioritised field is considered. Currently, it is
%   'MPRAGE' for T1w, 'FLAIR' for FLAIR, 'DTI' for dwi, and 'ASL' for asl.
%
%
% ==============================  END OF bmp_DICOMtoBIDSmapper HEADER ===========================



	supported_datasets = 	{
							'ADNI'
							};

	
	if nargin == 2 && iscell (varargin{1}) && iscell (varargin{2})

		fnam_arr = varargin{1};
		fval_arr = varargin{2};

		% Make guesses
		fprintf ('%s : Trying to suggest field(s) for DICOM-to-BIDS convertion.\n', mfilename);
		fprintf ('%s : ''SeriesDescription'' is prioritised from our experience.\n', mfilename);

		if any (strcmp (fnam_arr, 'SeriesDescription'))

			fprintf ('%s : ''SeriesDescription'' is found and used as key fieldname.\n', mfilename);

			fnam = 'SeriesDescription';

		elseif any (strcmp (fnam_arr, 'ProtocolName'))

			fprintf ('%s : ''SeriesDescription'' is not found. ''ProtocolName'' is found, and it is preferred after ''SeriesDescription''. Therefore, ''ProtocolName'' is used as key fieldname.\n', mfilename);

			fnam = 'ProtocolName';

		end

		fval = fval_arr{find (strcmp (fnam_arr, fnam)),1};


		% initialise 'criteria'
		clear criteria;
		criteria.T1w = struct();
		criteria.FLAIR = struct();
		criteria.dwi = struct();
		criteria.asl = struct();
		

		% Assuming 'SeriesDescription' and 'ProtocolName' sharing the same keywords
		for i = 1 : size (fval,1)

			% guess T1w DICOM-to-BIDS mapping
			% +++++++++++++++++++++++++++++++
			if contains (fval{i,1}, 'MPRAGE', IgnoreCase=true)

				fprintf ('%s : Substring ''MPRAGE'' (case-insensitive) exists in ''%s''. I guess this corresponds to T1w.\n', mfilename, fval{i,1});

				if ~ (isfield (criteria.T1w, 'fieldname') || isfield (criteria.T1w, 'fieldvalue'))

					criteria.T1w(1).fieldname = fnam;
					criteria.T1w(1).fieldvalue = fval{i,1};

					% criteria.T1w(i)
					%              ^
					%              |
					%              --------- index used to identify all matched keywords.
					%                        The first element in the array, i.e., criteria.T1w(1),
					%                        is prioritised.

				else

					warning ('%s : ''MPRAGE'' (case-insensitive) has been found, which is thought to relate to T1w. However, it seems another criterion for T1w had already been found (''%s'' in field ''%s''). This criterion may have keyword ''T1'' (case-insensitive). Therefore, I am confused now. Both keyfields have been documented, but I''ll prefer keyword ''MPRAGE'' (case-insensitive).\n', mfilename, criteria.T1w.fieldvalue, criteria.T1w.fieldname);

					criteria.T1w(2).fieldname = criteria.T1w(1).fieldname;
					criteria.T1w(2).fieldvalue = criteria.T1w(1).fieldvalue;

					criteria.T1w(1).fieldname = fnam;
					criteria.T1w(1).fieldvalue = fval{i,1};

				end

			elseif contains (fval{i,1}, 'T1', IgnoreCase=true)

				fprintf ('%s : Substring ''T1'' (case-insensitive) exists in ''%s''. I guess this corresponds to T1w.\n', mfilename, fval{i,1});

				if ~ (isfield (criteria.T1w, 'fieldname') || isfield (criteria.T1w, 'fieldvalue'))

					criteria.T1w(1).fieldname = fnam;
					criteria.T1w(1).fieldvalue = fval{i,1};

				else

					warning ('%s : ''T1'' (case-insensitive) has been found, which is thought to relate to T1w. However, it seems another criterion for T1w had already been found (''%s'' in field ''%s''). This criterion may have keyword ''MPRAGE'' (case-insensitive). Therefore, I am confused now. Both keyfields have been documented, but I''ll prefer keyword ''MPRAGE'' (case-insensitive), and not update criteria.T1w.\n', mfilename, criteria.T1w.fieldvalue, criteria.T1w.fieldname);
				end

			end


			% guess FLAIR DICOM-to-BIDS mapping
			% +++++++++++++++++++++++++++++++++
			if contains (fval{i,1}, 'FLAIR', IgnoreCase=true)

				fprintf ('%s : Substring ''FLAIR'' (case-insensitive) exists in ''%s''. I guess this corresponds to T2-weighted FLAIR.\n', mfilename, fval{i,1});

				if ~ (isfield (criteria.FLAIR, 'fieldname') || isfield (criteria.FLAIR, 'fieldvalue'))

					criteria.FLAIR(1).fieldname = fnam;
					criteria.FLAIR(1).fieldvalue = fval{i,1};

				end

			end


			% guess dMRI DICOM-to-BIDS mapping
			% ++++++++++++++++++++++++++++++++
			if contains (fval{i,1}, 'DTI', IgnoreCase=true)

				fprintf ('%s : Substring ''DTI'' (case-insensitive) exists in ''%s''. I guess this corresponds to diffusion MRI.\n', mfilename, fval{i,1});

				if ~ (isfield (criteria.dwi, 'fieldname') || isfield (criteria.dwi, 'fieldvalue'))

					criteria.dwi(1).fieldname = fnam;
					criteria.dwi(1).fieldvalue = fval{i,1};

				end

			end


			% guess ASL DICOM-to-BIDS mapping
			% +++++++++++++++++++++++++++++++
			if contains (fval{i,1}, 'ASL', IgnoreCase=true)

				fprintf ('%s : Substring ''ASL'' (case-insensitive) exists in ''%s''. I guess this corresponds to ASL perfusion imaging.\n', mfilename, fval{i,1});

				if ~ (isfield (criteria.asl, 'fieldname') || isfield (criteria.asl, 'fieldvalue'))

					criteria.asl(1).fieldname = fnam;
					criteria.asl(1).fieldvalue = fval{i,1};

				end

			end

		end




		%% TO BE SWITCHED TO TABLE-BASED DICOM2BIDS
		%% SHOULD LOOK AT ACTUAL DICOM DATA TO CONSTRUCT INDIVIDUAL-LEVEL MAPPINGS.
		%% ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		%% BELOW COMMENTED CODE NEED TO BE REMOVED.

		% suggest DICOM2BIDS for bmp_BIDSgenerator
		% fprintf ('%s : Making suggestions for DICOM-to-BIDS mapping for bmp_BIDSgenerator.\n', mfilename);
		% fprintf ('%s : These suggestions may only work for dataset-level mapping.\n', mfilename);


		% clear DICOM2BIDS;

		% if isfield (criteria.T1w, 'fieldname') && isfield (criteria.T1w, 'fieldvalue')

		% 	DICOM2BIDS.ses.anat.T1w.run.DICOM.(criteria.T1w(1).fieldname) = criteria.T1w(1).fieldvalue;

		% 	% Only consider prioritised criterion now. To implement multiple criteria in the future.
		% 	% Note there's no DICOM2BIDS.anat.T1w.BIDS field here, as nothing to specify

		% end

		% if isfield (criteria.FLAIR, 'fieldname') && isfield (criteria.FLAIR, 'fieldvalue')

		% 	DICOM2BIDS.ses.anat.FLAIR.run.DICOM.(criteria.FLAIR(1).fieldname) = criteria.FLAIR(1).fieldvalue;

		% end

		% if isfield (criteria.dwi, 'fieldname') && isfield (criteria.dwi, 'fieldvalue')

		% 	DICOM2BIDS.ses.dwi.dwi.run.DICOM.(criteria.dwi(1).fieldname) = criteria.dwi(1).fieldvalue;

		% end

		% if isfield (criteria.asl, 'fieldname') && isfield (criteria.asl, 'fieldvalue')

		% 	DICOM2BIDS.ses.perf.asl.run.DICOM(1).(criteria.asl(1).fieldname) = criteria.asl(1).fieldvalue;

		% end



	elseif nargin == 1 && any(strcmp(supported_datasets, varargin{1}))

			switch varargin{1}

				case 'ADNI'

					DICOM2BIDS = bmp_ADNI ('retrieve');

					
			end

	elseif nargin == 0

		DICOM2BIDS = bmp_ADNI ('retrieve');

	else

		error ('bmp_DICOMtoBIDSmapper:InvalidInputs',...
				'%s : Invalid inputs. Inputs should be 1) cell arrays of fieldnames and fieldvalues, or 2) name of supported datasets (e.g., ADNI).');

	end

end